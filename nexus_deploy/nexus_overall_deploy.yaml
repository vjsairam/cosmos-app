---
apiVersion: v1
kind: PersistentVolume
metadata: 
  name: nexus-ebs-pv
  namespace: operations
  labels:
    type: nexusEBS
spec:
  storageClassName: gp2
  capacity:
    storage: 2046Gi
  persistentVolumeReclaimPolicy: Retain
  accessModes:
    - ReadWriteOnce
  awsElasticBlockStore:
    volumeID: vol-0314dae92a4ec9ae5
    fsType: ext4 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nexus-pvc-claim
  namespace: operations
spec:
  storageClassName: gp2
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2046Gi
  selector:
    matchLabels:
      type: nexusEBS

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: operations
data:
  nginx.conf: |
    events {
    }
    http {
    proxy_send_timeout        120;
    proxy_read_timeout        300;
    proxy_buffering           off;
    keepalive_timeout         5 5;
    tcp_nodelay               on;
    ssl                       on;
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
    client_max_body_size      1G;
    server {
      listen                  *:443;
      location / {
        proxy_pass            http://localhost:8081/;
        proxy_redirect        off;
        proxy_set_header      Host $host;
        proxy_set_header      X-Real-IP $remote_addr;
        proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header      X-Forwarded-Host $server_name;
        proxy_set_header      X-Forwarded-Proto $scheme;
      }
    }
    server {
      listen                  *:9001;
      location / {
        proxy_pass            http://localhost:8123/;
        proxy_redirect        off;
        proxy_set_header      Host $host;
        proxy_set_header      X-Real-IP $remote_addr;
        proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header      X-Forwarded-Host $server_name;
        proxy_set_header      X-Forwarded-Proto $scheme;
      }
    }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: nexus
  namespace: operations
spec:
  type: LoadBalancer
  ports:
    - name: port443
      port: 443
      targetPort: 443
    - name: port9001
      port: 9001
      targetPort: 9001
  selector:
    name: nexus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nexus
  namespace: operations
  labels:
    app: nexus
spec:
  selector:
    matchLabels:
      name: nexus
  replicas: 1
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        name: nexus
        app: nexus
    spec:
      securityContext:
          fsGroup: 200
      containers:
        - name: nexus
          imagePullPolicy: IfNotPresent
          image: sonatype/nexus3:latest
          volumeMounts:
          - name: nexus-pvc-storage
            mountPath: /nexus-data
          resources:
           limits:
             memory: "4Gi"
             cpu: "1000m"
           requests:
             memory: "2Gi"
             cpu: "500m" 
        - image: nginx
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
            - name: port443
              containerPort: 443
            - name: port9001
              containerPort: 9001
          resources:
            limits:
              memory: "4Gi"
              cpu: "1000m"
            requests:
              memory: "2Gi"
              cpu: "500m"
          volumeMounts:
          - mountPath: /etc/nginx
            name: conf  
      volumes:
      - name: conf
        configMap:
          name: nginx-config
      - name: nexus-pvc-storage
        persistentVolumeClaim:
          claimName: nexus-pvc-claim
      nodeSelector: 
        Environment: Operations

